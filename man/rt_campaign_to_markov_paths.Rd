% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/attribution.R
\name{rt_campaign_to_markov_paths}
\alias{rt_campaign_to_markov_paths}
\title{adds converts campaign data to path data in the format expected by ChannelAttribution::markov_model & ChannelAttribution::heuristic_models}
\usage{
rt_campaign_to_markov_paths(
  .campaign_data,
  .id = "id",
  .path_id = ".path_id",
  .step = "step",
  .timestamp = "timestamp",
  .num_conversions = "num_conversions",
  .conversion_value = "conversion_value",
  .separate_paths_ids = TRUE,
  .sort = TRUE,
  .symbol = " > "
)
}
\arguments{
\item{.campaign_data}{dataframe with columns `id | timestamp | step | num_conversions | conversion_value`}

\item{.id}{string identifying the id column}

\item{.path_id}{string identifying the path_id column}

\item{.step}{string identifying the step column}

\item{.timestamp}{string identifying the timestamp column}

\item{.num_conversions}{string identifying the num_conversions column}

\item{.conversion_value}{string identifying the conversion_values column}

\item{.separate_paths_ids}{if TRUE, each .path_id gets its own row & path_sequence. Each .id will be represented >= 1 times
if FALSE, each person will only be counted once, with their entire path, and cumulative conversions/conversion-value/null-conversions}

\item{.sort}{if true, the df is sorted by id, timestamp, conversion_values, & num_conversions; the dataframe needs to be sorted in this way to work, but this option let's the user avoid this action if it has already been done}

\item{.symbol}{the symbol to separate the steps}
}
\description{
adds converts campaign data to path data in the format expected by ChannelAttribution::markov_model & ChannelAttribution::heuristic_models
}
